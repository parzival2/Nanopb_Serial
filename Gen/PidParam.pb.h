/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_PIDPARAM_PB_H_INCLUDED
#define PB_PIDPARAM_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _PidParam {
    float p;
    float i;
    float d;
} PidParam;


/* Initializer values for message structs */
#define PidParam_init_default                    {0, 0, 0}
#define PidParam_init_zero                       {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define PidParam_p_tag                           1
#define PidParam_i_tag                           2
#define PidParam_d_tag                           3

/* Struct field encoding specification for nanopb */
#define PidParam_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    p,                 1) \
X(a, STATIC,   REQUIRED, FLOAT,    i,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    d,                 3)
#define PidParam_CALLBACK NULL
#define PidParam_DEFAULT NULL

extern const pb_msgdesc_t PidParam_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define PidParam_fields &PidParam_msg

/* Maximum encoded size of messages (where known) */
#define PidParam_size                            15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
